#!/bin/bash
#

if [ -z "${PPMAC_IP}" ]
then
    echo "Usage: $0"
    echo "Be sure to set PPMAC_IP, PPMAC_PW, PPMAC_TEMPDIR, PPMAC_FILES environment variables"
    exit 1
fi

: ${PPMAC_IP:=10.0.0.98}
: ${PPMAC_PW:=deltatau}
: ${PPMAC_FILES:="plcs.plc subprog1.pmc piezo_motion.pmc $1"}
: ${PPMAC_TEMPDIR:="proj_temp"}
echo "--------------------------------------------"
echo "Power PMAC IP: $PPMAC_IP Password: $PPMAC_PW"
echo "Project files: $PPMAC_FILES"
echo "Temporary project directory: $PPMAC_TEMPDIR"
echo "--------------------------------------------"
echo

mkdir ${PPMAC_TEMPDIR}

cat > ${PPMAC_TEMPDIR}/_load_project <<'endl'
#!/bin/bash

read -d '' PYSCRIPT <<"EOF"
# Quick script to flatten project filenames so vim will recognize them
import os
import sys
import re

for line in sys.stdin.readlines():
    line = line.rstrip()
    m = re.match('^(\/var/ftp/usrflash/.*?): (.*)$', line)
    if m:
        fn, rest = m.groups()
        print '%s: %s' % (os.path.split(fn)[1], rest)
    else:
        print line
EOF

# Load the project, but strip out control characters in the response
projpp | grep -v -e "UnlinkGatherThread" | sed '/^[[:cntrl:]]$/d' > /dev/stdout
echo

grep -v -e "unknown escape sequence" -e "PMAC_PROJECT" -e "redefined" -e "location of the previous" /var/ftp/usrflash/Project/Log/pp_error.log | python -c "${PYSCRIPT}"

echo "Compiling all C source..."
#find . -name Makefile -exec dirname {} \; | xargs -I '{}' make -C {} clean
find /var/ftp/usrflash -name Makefile -exec dirname {} \; | xargs -I '{}' make -C {}

rm /var/ftp/usrflash/_load_project
endl


echo "--- Copying configuration files"

echo
echo "--- Copying project, PLCs"
echo python make_project.py ${PPMAC_TEMPDIR} ${PPMAC_FILES}
python make_project.py ${PPMAC_TEMPDIR} ${PPMAC_FILES}
sshpass -p $PPMAC_PW scp -r ${PPMAC_TEMPDIR}/* root@${PPMAC_IP}:/var/ftp/usrflash
sshpass -p $PPMAC_PW ssh root@${PPMAC_IP} "chmod 755 /var/ftp/usrflash/_load_project; /var/ftp/usrflash/_load_project"

echo "--- Done"
